function plotInitalCircles(obj)
hitT = obj.hit;
sensor_to_hit = obj.R1;
% R1i = obj.t1_REF*obj.v - obj.R1; == 0
R2i = obj.dT2*obj.v;
R3i = obj.dT3*obj.v;
x_2 = obj.nodes(obj.node2,1);
y_2 = obj.nodes(obj.node2,2);
x_3 = obj.nodes(obj.node3,1);
y_3 = obj.nodes(obj.node3,2);

try %#ok<*TRYNC>
    rectangle('position',...
        [hitT(1)-sensor_to_hit, hitT(2)-sensor_to_hit, ...
        2.*sensor_to_hit, 2.*sensor_to_hit],...
        'curvature',[1 1],...
        'EdgeColor','r',...
        'LineStyle',':');
end
try
    rectangle('position', [x_2-R2i, y_2-R2i, 2.*R2i, 2.*R2i],...
        'curvature',[1 1],...
        'EdgeColor',[0 0 1])
end
try
    rectangle('position', [x_3-R3i, y_3-R3i, 2.*R3i, 2.*R3i],...
        'curvature',[1 1],...
        'EdgeColor',[0 0 1])
end

% tr = text(hitT(1),hitT(2),...
%     ['Red dotted circle:',nl,...
%     'Locus of all points that contained',nl,...
%     'the wave front when the wave hits',nl,...
%     'the first sensor (Note: This is', nl,...
%     'unknown in real life.)']);
%
% tb = text(0.25,0.25,...
%     ['Blue Circles:', nl,...
%     'Locus of all potential points the',nl,...
%     'wave could have been located when',nl,...
%     'the wave hits the first sensor']);
% delete(txtr);
%     axis equal

